{"numFailedTestSuites":1,"numFailedTests":4,"numPassedTestSuites":0,"numPassedTests":32,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":36,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1584897588781,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["chromium type and fill test","headless: false","method: type"],"failureMessages":[],"fullName":"chromium type and fill test headless: false method: type should update input values inside bootstrap modal","location":null,"status":"passed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["chromium type and fill test","headless: false","method: type"],"failureMessages":[],"fullName":"chromium type and fill test headless: false method: type should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["chromium type and fill test","headless: false","method: type"],"failureMessages":[],"fullName":"chromium type and fill test headless: false method: type should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"},{"ancestorTitles":["chromium type and fill test","headless: false","method: fill"],"failureMessages":[],"fullName":"chromium type and fill test headless: false method: fill should update input values inside bootstrap modal","location":null,"status":"passed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["chromium type and fill test","headless: false","method: fill"],"failureMessages":[],"fullName":"chromium type and fill test headless: false method: fill should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["chromium type and fill test","headless: false","method: fill"],"failureMessages":[],"fullName":"chromium type and fill test headless: false method: fill should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"},{"ancestorTitles":["chromium type and fill test","headless: true","method: type"],"failureMessages":[],"fullName":"chromium type and fill test headless: true method: type should update input values inside bootstrap modal","location":null,"status":"passed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["chromium type and fill test","headless: true","method: type"],"failureMessages":[],"fullName":"chromium type and fill test headless: true method: type should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["chromium type and fill test","headless: true","method: type"],"failureMessages":[],"fullName":"chromium type and fill test headless: true method: type should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"},{"ancestorTitles":["chromium type and fill test","headless: true","method: fill"],"failureMessages":[],"fullName":"chromium type and fill test headless: true method: fill should update input values inside bootstrap modal","location":null,"status":"passed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["chromium type and fill test","headless: true","method: fill"],"failureMessages":[],"fullName":"chromium type and fill test headless: true method: fill should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["chromium type and fill test","headless: true","method: fill"],"failureMessages":[],"fullName":"chromium type and fill test headless: true method: fill should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"},{"ancestorTitles":["firefox type and fill test","headless: false","method: type"],"failureMessages":[],"fullName":"firefox type and fill test headless: false method: type should update input values inside bootstrap modal","location":null,"status":"passed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["firefox type and fill test","headless: false","method: type"],"failureMessages":[],"fullName":"firefox type and fill test headless: false method: type should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["firefox type and fill test","headless: false","method: type"],"failureMessages":[],"fullName":"firefox type and fill test headless: false method: type should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"},{"ancestorTitles":["firefox type and fill test","headless: false","method: fill"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"asdfasdf@jkljkl.com\"\u001b[39m\nReceived: \u001b[31m\"\"\u001b[39m\n    at forEach (/Users/aes/sandbox/playwright-screenshot/src/playwright.spec.js:86:29)\n    at Array.forEach (<anonymous>)\n    at /Users/aes/sandbox/playwright-screenshot/src/playwright.spec.js:85:18"],"fullName":"firefox type and fill test headless: false method: fill should update input values inside bootstrap modal","location":null,"status":"failed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["firefox type and fill test","headless: false","method: fill"],"failureMessages":[],"fullName":"firefox type and fill test headless: false method: fill should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["firefox type and fill test","headless: false","method: fill"],"failureMessages":[],"fullName":"firefox type and fill test headless: false method: fill should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"},{"ancestorTitles":["firefox type and fill test","headless: true","method: type"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"a\u001b[7msdfasdf@jkljkl.com\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"a\"\u001b[39m\n    at forEach (/Users/aes/sandbox/playwright-screenshot/src/playwright.spec.js:86:29)\n    at Array.forEach (<anonymous>)\n    at /Users/aes/sandbox/playwright-screenshot/src/playwright.spec.js:85:18"],"fullName":"firefox type and fill test headless: true method: type should update input values inside bootstrap modal","location":null,"status":"failed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["firefox type and fill test","headless: true","method: type"],"failureMessages":[],"fullName":"firefox type and fill test headless: true method: type should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["firefox type and fill test","headless: true","method: type"],"failureMessages":[],"fullName":"firefox type and fill test headless: true method: type should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"},{"ancestorTitles":["firefox type and fill test","headless: true","method: fill"],"failureMessages":[],"fullName":"firefox type and fill test headless: true method: fill should update input values inside bootstrap modal","location":null,"status":"passed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["firefox type and fill test","headless: true","method: fill"],"failureMessages":[],"fullName":"firefox type and fill test headless: true method: fill should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["firefox type and fill test","headless: true","method: fill"],"failureMessages":[],"fullName":"firefox type and fill test headless: true method: fill should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"},{"ancestorTitles":["webkit type and fill test","headless: false","method: type"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"a\u001b[7msdfasdf@jkljkl.com\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"a\"\u001b[39m\n    at forEach (/Users/aes/sandbox/playwright-screenshot/src/playwright.spec.js:86:29)\n    at Array.forEach (<anonymous>)\n    at /Users/aes/sandbox/playwright-screenshot/src/playwright.spec.js:85:18"],"fullName":"webkit type and fill test headless: false method: type should update input values inside bootstrap modal","location":null,"status":"failed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["webkit type and fill test","headless: false","method: type"],"failureMessages":[],"fullName":"webkit type and fill test headless: false method: type should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["webkit type and fill test","headless: false","method: type"],"failureMessages":[],"fullName":"webkit type and fill test headless: false method: type should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"},{"ancestorTitles":["webkit type and fill test","headless: false","method: fill"],"failureMessages":[],"fullName":"webkit type and fill test headless: false method: fill should update input values inside bootstrap modal","location":null,"status":"passed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["webkit type and fill test","headless: false","method: fill"],"failureMessages":[],"fullName":"webkit type and fill test headless: false method: fill should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["webkit type and fill test","headless: false","method: fill"],"failureMessages":[],"fullName":"webkit type and fill test headless: false method: fill should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"},{"ancestorTitles":["webkit type and fill test","headless: true","method: type"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"asdfasdf@\u001b[7mjkljkl.com\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"asdfasdf@\"\u001b[39m\n    at forEach (/Users/aes/sandbox/playwright-screenshot/src/playwright.spec.js:86:29)\n    at Array.forEach (<anonymous>)\n    at /Users/aes/sandbox/playwright-screenshot/src/playwright.spec.js:85:18"],"fullName":"webkit type and fill test headless: true method: type should update input values inside bootstrap modal","location":null,"status":"failed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["webkit type and fill test","headless: true","method: type"],"failureMessages":[],"fullName":"webkit type and fill test headless: true method: type should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["webkit type and fill test","headless: true","method: type"],"failureMessages":[],"fullName":"webkit type and fill test headless: true method: type should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"},{"ancestorTitles":["webkit type and fill test","headless: true","method: fill"],"failureMessages":[],"fullName":"webkit type and fill test headless: true method: fill should update input values inside bootstrap modal","location":null,"status":"passed","title":"should update input values inside bootstrap modal"},{"ancestorTitles":["webkit type and fill test","headless: true","method: fill"],"failureMessages":[],"fullName":"webkit type and fill test headless: true method: fill should update input values outside modal","location":null,"status":"passed","title":"should update input values outside modal"},{"ancestorTitles":["webkit type and fill test","headless: true","method: fill"],"failureMessages":[],"fullName":"webkit type and fill test headless: true method: fill should update input values inside vuetify modal","location":null,"status":"passed","title":"should update input values inside vuetify modal"}],"endTime":1584897689767,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mfirefox type and fill test › headless: false › method: fill › should update input values inside bootstrap modal\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"asdfasdf@jkljkl.com\"\u001b[39m\n    Received: \u001b[31m\"\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 | \u001b[39m        \u001b[36mconst\u001b[39m textVals \u001b[33m=\u001b[39m await page\u001b[33m.\u001b[39m$$eval(\u001b[32m\"input[type=text]\"\u001b[39m\u001b[33m,\u001b[39m (inputs) \u001b[33m=>\u001b[39m inputs\u001b[33m.\u001b[39mmap((input) \u001b[33m=>\u001b[39m input\u001b[33m.\u001b[39mvalue))\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 | \u001b[39m        textVals\u001b[33m.\u001b[39mforEach((textVal) \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 86 | \u001b[39m            expect(textVal)\u001b[33m.\u001b[39mtoBe(\u001b[33mSOME_TEXT\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 | \u001b[39m        })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 88 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 | \u001b[39m        \u001b[36mconst\u001b[39m emailVals \u001b[33m=\u001b[39m await page\u001b[33m.\u001b[39m$$eval(\u001b[32m\"input[type=email]\"\u001b[39m\u001b[33m,\u001b[39m (inputs) \u001b[33m=>\u001b[39m inputs\u001b[33m.\u001b[39mmap((input) \u001b[33m=>\u001b[39m input\u001b[33m.\u001b[39mvalue))\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat forEach (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/playwright.spec.js\u001b[39m\u001b[0m\u001b[2m:86:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.forEach (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/playwright.spec.js\u001b[39m\u001b[0m\u001b[2m:85:18\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mfirefox type and fill test › headless: true › method: type › should update input values inside bootstrap modal\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"a\u001b[7msdfasdf@jkljkl.com\u001b[27m\"\u001b[39m\n    Received: \u001b[31m\"a\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 | \u001b[39m        \u001b[36mconst\u001b[39m textVals \u001b[33m=\u001b[39m await page\u001b[33m.\u001b[39m$$eval(\u001b[32m\"input[type=text]\"\u001b[39m\u001b[33m,\u001b[39m (inputs) \u001b[33m=>\u001b[39m inputs\u001b[33m.\u001b[39mmap((input) \u001b[33m=>\u001b[39m input\u001b[33m.\u001b[39mvalue))\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 | \u001b[39m        textVals\u001b[33m.\u001b[39mforEach((textVal) \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 86 | \u001b[39m            expect(textVal)\u001b[33m.\u001b[39mtoBe(\u001b[33mSOME_TEXT\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 | \u001b[39m        })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 88 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 | \u001b[39m        \u001b[36mconst\u001b[39m emailVals \u001b[33m=\u001b[39m await page\u001b[33m.\u001b[39m$$eval(\u001b[32m\"input[type=email]\"\u001b[39m\u001b[33m,\u001b[39m (inputs) \u001b[33m=>\u001b[39m inputs\u001b[33m.\u001b[39mmap((input) \u001b[33m=>\u001b[39m input\u001b[33m.\u001b[39mvalue))\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat forEach (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/playwright.spec.js\u001b[39m\u001b[0m\u001b[2m:86:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.forEach (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/playwright.spec.js\u001b[39m\u001b[0m\u001b[2m:85:18\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwebkit type and fill test › headless: false › method: type › should update input values inside bootstrap modal\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"a\u001b[7msdfasdf@jkljkl.com\u001b[27m\"\u001b[39m\n    Received: \u001b[31m\"a\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 | \u001b[39m        \u001b[36mconst\u001b[39m textVals \u001b[33m=\u001b[39m await page\u001b[33m.\u001b[39m$$eval(\u001b[32m\"input[type=text]\"\u001b[39m\u001b[33m,\u001b[39m (inputs) \u001b[33m=>\u001b[39m inputs\u001b[33m.\u001b[39mmap((input) \u001b[33m=>\u001b[39m input\u001b[33m.\u001b[39mvalue))\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 | \u001b[39m        textVals\u001b[33m.\u001b[39mforEach((textVal) \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 86 | \u001b[39m            expect(textVal)\u001b[33m.\u001b[39mtoBe(\u001b[33mSOME_TEXT\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 | \u001b[39m        })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 88 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 | \u001b[39m        \u001b[36mconst\u001b[39m emailVals \u001b[33m=\u001b[39m await page\u001b[33m.\u001b[39m$$eval(\u001b[32m\"input[type=email]\"\u001b[39m\u001b[33m,\u001b[39m (inputs) \u001b[33m=>\u001b[39m inputs\u001b[33m.\u001b[39mmap((input) \u001b[33m=>\u001b[39m input\u001b[33m.\u001b[39mvalue))\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat forEach (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/playwright.spec.js\u001b[39m\u001b[0m\u001b[2m:86:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.forEach (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/playwright.spec.js\u001b[39m\u001b[0m\u001b[2m:85:18\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mwebkit type and fill test › headless: true › method: type › should update input values inside bootstrap modal\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"asdfasdf@\u001b[7mjkljkl.com\u001b[27m\"\u001b[39m\n    Received: \u001b[31m\"asdfasdf@\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 | \u001b[39m        \u001b[36mconst\u001b[39m textVals \u001b[33m=\u001b[39m await page\u001b[33m.\u001b[39m$$eval(\u001b[32m\"input[type=text]\"\u001b[39m\u001b[33m,\u001b[39m (inputs) \u001b[33m=>\u001b[39m inputs\u001b[33m.\u001b[39mmap((input) \u001b[33m=>\u001b[39m input\u001b[33m.\u001b[39mvalue))\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 | \u001b[39m        textVals\u001b[33m.\u001b[39mforEach((textVal) \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 86 | \u001b[39m            expect(textVal)\u001b[33m.\u001b[39mtoBe(\u001b[33mSOME_TEXT\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 | \u001b[39m        })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 88 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 | \u001b[39m        \u001b[36mconst\u001b[39m emailVals \u001b[33m=\u001b[39m await page\u001b[33m.\u001b[39m$$eval(\u001b[32m\"input[type=email]\"\u001b[39m\u001b[33m,\u001b[39m (inputs) \u001b[33m=>\u001b[39m inputs\u001b[33m.\u001b[39mmap((input) \u001b[33m=>\u001b[39m input\u001b[33m.\u001b[39mvalue))\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat forEach (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/playwright.spec.js\u001b[39m\u001b[0m\u001b[2m:86:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.forEach (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/playwright.spec.js\u001b[39m\u001b[0m\u001b[2m:85:18\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/aes/sandbox/playwright-screenshot/src/playwright.spec.js","startTime":1584897589954,"status":"failed","summary":""}],"wasInterrupted":false}